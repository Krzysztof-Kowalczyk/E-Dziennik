@model edziennik.Models.MarkCreateViewModel

@{
    ViewBag.Title = "Edycja";
}

<h2>Edycja</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Ocena</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.TeacherId)
        @Html.HiddenFor(model => model.StudentId)
        @for (var i = 0; i < Model.Subjects.Count; i++)
        {
            @Html.HiddenFor(m => m.Subjects[i].Text)
            @Html.HiddenFor(m => m.Subjects[i].Value)
        }
        @for (var i = 0; i < Model.Values.Count; i++)
        {
            @Html.HiddenFor(m => m.Values[i].Text)
            @Html.HiddenFor(m => m.Values[i].Value)
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Value, Model.Values)
                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubjectId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.SubjectId, Model.Subjects)
                @Html.ValidationMessageFor(model => model.SubjectId, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Zapisz" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót do listy", "Index", null, new { @class = "btn btn-primary" })
</div>
