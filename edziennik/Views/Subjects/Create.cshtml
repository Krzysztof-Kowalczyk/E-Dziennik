@model edziennik.Models.ViewModels.SubjectCreateViewModel
@section scripts{
    @Scripts.Render("~/Scripts/SubjectPopulateSelectLists.js")
}

@{
    ViewBag.Title = "Stwórz";
}

<h2>Stwórz</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Subject</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @for (var i = 0; i < Model.Teachers.Count; i++)
        {
            @Html.HiddenFor(m => m.Teachers[i].Text)
            @Html.HiddenFor(m => m.Teachers[i].Value)
        }
        @for (var i = 0; i < Model.Days.Count; i++)
        {
            @Html.HiddenFor(m => m.Days[i].Text)
            @Html.HiddenFor(m => m.Days[i].Value)
        }
        @for (var i = 0; i < Model.Hours.Count; i++)
        {
            @Html.HiddenFor(m => m.Hours[i].Text)
            @Html.HiddenFor(m => m.Hours[i].Value)
        }
        @for (var i = 0; i < Model.Classes.Count; i++)
        {
            @Html.HiddenFor(m => m.Classes[i].Text)
            @Html.HiddenFor(m => m.Classes[i].Value)
        }
        @for (var i = 0; i < Model.Classrooms.Count; i++)
        {
            @Html.HiddenFor(m => m.Classrooms[i].Text)
            @Html.HiddenFor(m => m.Classrooms[i].Value)
        }
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Nauczyciel</label>
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.TeacherId, Model.Teachers, "")
                @Html.ValidationMessageFor(model => model.TeacherId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Klasa</label>
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ClasssId, Model.Classes, "")
                @Html.ValidationMessageFor(model => model.ClasssId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Sala</label>
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ClassroomId, Model.Classrooms, "")
                @Html.ValidationMessageFor(model => model.ClassroomId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Day, Model.Days, "")
                @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hour, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.Hour, Model.Hours, "")
                @Html.ValidationMessageFor(model => model.Hour, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Stwórz" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Powrót do listy", "Index", null, new { @class = "btn btn-primary" })
</div>


